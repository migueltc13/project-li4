@page
@model BetterFinds.Pages.SearchModel
@{
    ViewData["Title"] = "Search";
}

<div class="main-wrapper">
    <form id="filterForm" asp-page="/search" method="get">
        <div hidden>
            <select id="query" name="query">
                <option value="@Model.Query"></option>
            </select>
        </div>

        <div class="sort-container">
            <label for="sort">Sort By: </label>
            <select id="sort" name="sort" style="width: 200px; text-align: center">
                <option value="date" selected="@(Model.CurrentSort == "date")">Ending Time (Ascending)</option>
                <option value="dateRev" selected="@(Model.CurrentSort == "dateRev")">Ending Time (Descending)</option>
                <option value="name" selected="@(Model.CurrentSort == "name")">Product Name (A-Z)</option>
                <option value="nameRev" selected="@(Model.CurrentSort == "nameRev")">Product Name (Z-A)</option>
                <option value="price" selected="@(Model.CurrentSort == "price")">Product Price (Lowest first)</option>
                <option value="priceRev" selected="@(Model.CurrentSort == "priceRev")">Product Price (Highest first)</option>
            </select>
        </div>

        <div class="sort-container">
            <label for="occurring">Show: </label>
            <select id="occurring" name="occurring" style="width: 100px; text-align: center">
                <option value="0" selected="@(Model.CurrentOccurring == 0)">All</option>
                <option value="1" selected="@(Model.CurrentOccurring == 1)">Occurring</option>
            </select>
        </div>
    </form>
    @if (Model.SearchResults != null && Model.SearchResults.Count > 0)
    {
        <div>
            <h2 style ="padding-bottom: 10px">Search results</h2>

            <ul>
                @foreach (var auction in Model.SearchResults)
                {
                    var auctionDict = auction as Dictionary<string, object>;
                    if (auctionDict != null)
                    {
                        <li>
                            <p>
                                <a href="/auction?id=@auctionDict["AuctionId"]">@auctionDict["ProductName"]</a>
                                - @($"{Utils.Currency.FormatDecimalObject(auctionDict["ProductPrice"])}€")
                                - @auctionDict["EndTime"]
                            </p>
                        </li>
                    }
                }
            </ul>
        </div>
    }
    else
    {
        <h3>No search results were found.</h3>
    }
</div>
<script>
    document.getElementById('sort').addEventListener('change', function () {
        submitForm();
    });

    document.getElementById('occurring').addEventListener('change', function () {
        submitForm();
    });

    function submitForm() {
        var sortValue = document.getElementById('sort').value;
        var occuringValue = document.getElementById('occurring').value;

        // Update or add the new values to the query string
        var queryString = `?sort=${sortValue}&occurring=${occuringValue}&testing=wtf`;

        console.log(queryString);

        // Set the form action URL with the new parameters
        document.getElementById('filterForm').action = '/search' + queryString;

        // Submit the form
        document.getElementById('filterForm').submit();
    }
</script>
